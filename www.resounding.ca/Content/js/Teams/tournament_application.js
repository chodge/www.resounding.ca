// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['chaplin', 'teams/views/layout', 'teams/controllers/teams_controller', 'teams/routes'], function(Chaplin, Layout, TeamsController, routes) {
    'use strict';

    var TournamentApplication;
    _.templateSettings = {
      evaluate: /\{\{([\s\S]+?)\}\}/g,
      interpolate: /\{\{=([\s\S]+?)\}\}/g,
      escape: /\{\{-([\s\S]+?)\}\}/g
    };
    return TournamentApplication = (function(_super) {

      __extends(TournamentApplication, _super);

      function TournamentApplication() {
        return TournamentApplication.__super__.constructor.apply(this, arguments);
      }

      TournamentApplication.prototype.title = 'Resounding Tournaments teams';

      TournamentApplication.prototype.initialize = function() {
        TournamentApplication.__super__.initialize.apply(this, arguments);
        this.initDispatcher();
        this.initLayout();
        this.initControllers();
        return this.initRouter(routes);
      };

      TournamentApplication.prototype.initDispatcher = function() {
        return this.dispatcher = new Chaplin.Dispatcher({
          controllerPath: 'teams/controllers/'
        });
      };

      TournamentApplication.prototype.initLayout = function() {
        return this.layout = new Layout();
      };

      TournamentApplication.prototype.initControllers = function() {
        return new TeamsController();
      };

      return TournamentApplication;

    })(Chaplin.Application);
  });

}).call(this);
