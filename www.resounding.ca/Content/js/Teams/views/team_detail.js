// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['teams/views/base/view', 'text!teams/templates/teamViews.html'], function(View, html) {
    'use strict';

    var template;
    template = $(html).find('#team-detail').html();
    return View = (function(_super) {

      __extends(View, _super);

      function View() {
        return View.__super__.constructor.apply(this, arguments);
      }

      View.prototype.template = template;

      View.prototype.autoRender = true;

      View.prototype.initialize = function() {
        this.setElement("#team-" + this.model.id);
        return View.__super__.initialize.apply(this, arguments);
      };

      View.prototype.render = function() {
        var data, templateFunc;
        if (this.disposed) {
          return false;
        }
        templateFunc = this.getTemplateFunction();
        data = this.getTemplateData();
        html = templateFunc(data);
        this.$el.html(html);
        return this;
      };

      return View;

    })(View);
  });

}).call(this);
