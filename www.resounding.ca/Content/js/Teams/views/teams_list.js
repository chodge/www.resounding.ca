// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['chaplin', 'teams/views/team_detail'], function(Chaplin, TeamView) {
    'use strict';

    var View;
    return View = (function(_super) {

      __extends(View, _super);

      function View() {
        return View.__super__.constructor.apply(this, arguments);
      }

      View.prototype.initialize = function() {
        this.setElement('#teams');
        this.modelBind('reset', this.render);
        return View.__super__.initialize.apply(this, arguments);
      };

      View.prototype.getView = function(item) {
        return new TeamView({
          model: item
        });
      };

      View.prototype.render = function() {
        return View.__super__.render.apply(this, arguments);
      };

      View.prototype.renderAndInsertItem = function(item, index) {
        var view;
        return view = this.renderItem(item);
      };

      return View;

    })(Chaplin.CollectionView);
  });

}).call(this);
